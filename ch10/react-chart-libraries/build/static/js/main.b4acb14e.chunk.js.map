{"version":3,"sources":["components/SimpleReactVizChart/SimpleReactVizChart.tsx","App.tsx","AppRouter.tsx","index.tsx"],"names":["SimpleReactVizChart","className","height","width","data","x","y","App","AppRouter","fallback","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"oTA0CeA,EA/Ba,WAC1B,OACE,oCACE,yBAAKC,UAAU,OAEb,kBAAC,IAAD,CAAQC,OAAQ,IAAKC,MAAO,KAC1B,kBAAC,IAAD,CACEC,KAAM,CACJ,CAAEC,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,MAGf,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,UCmBKC,MAvBf,WAOE,OACE,yBAAKN,UAAU,OACb,4BAAQA,UAAU,cAQhB,kBAAC,EAAD,SCXOO,EA7BsB,WACnC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,WAAD,CAAUC,SAAU,6CAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWL,SCH7CM,IAASC,OAAO,kBAAC,EAAD,MAAeC,SAASC,eAAe,W","file":"static/js/main.b4acb14e.chunk.js","sourcesContent":["/*\nAuthor: Eli Elad Elrom\nWebsite: https://EliElrom.com\nLicense: MIT License\nComponent: src/component/SimpleReactVizChart/SimpleReactVizChart.tsx\n*/\n\nimport React from 'react'\nimport '../../../node_modules/react-vis/dist/style.css'\nimport { XYPlot, LineSeries, XAxis, YAxis, HorizontalGridLines, VerticalGridLines } from 'react-vis'\n\nconst SimpleReactVizChart = () => {\n  return (\n    <>\n      <div className=\"App\">\n\n        <XYPlot height={300} width={300}>\n          <LineSeries\n            data={[\n              { x: 0, y: 8 },\n              { x: 1, y: 5 },\n              { x: 2, y: 4 },\n              { x: 3, y: 9 },\n              { x: 4, y: 1 },\n              { x: 5, y: 7 },\n              { x: 6, y: 6 },\n              { x: 7, y: 3 },\n              { x: 8, y: 2 },\n              { x: 9, y: 0 },\n            ]}\n          />\n          <VerticalGridLines />\n          <HorizontalGridLines />\n          <XAxis />\n          <YAxis />\n        </XYPlot>\n\n      </div>\n    </>\n  )\n}\n\nexport default SimpleReactVizChart\n","/*\nAuthor: Eli Elad Elrom\nWebsite: https://EliElrom.com\nLicense: MIT License\nComponent: src/App.tsx\n*/\nimport React from 'react'\nimport './App.scss'\nimport SimpleReactVizChart from './components/SimpleReactVizChart/SimpleReactVizChart'\n\n/*\n// SimpleLineChart\nimport { useRecoilValue } from 'recoil'\nimport SimpleLineChart from './components/SimpleLineChart/SimpleLineChart'\nimport { Types } from './components/SimpleLineChart/types'\nimport { getLineData } from './recoil/selectors/lineDataSelectors'\n\n// SimpleBarGraph\nimport SimpleBarGraph from './components/SimpleBarGraph/SimpleBarGraph'\n\n// SimplePie\nimport SimplePie from './components/SimplePie/SimplePie'\n\n// SimpleCalendarChart\nimport { useRecoilValue } from 'recoil'\nimport SimpleCalendarChart from './components/SimpleCalendarChart/SimpleCalendarChart'\nimport { getCalendarData } from './recoil/selectors/calendarDataSelectors'\n\n */\n\nfunction App() {\n  // SimpleLineChart\n  // const data = useRecoilValue(getLineData) as Types.Data[]\n\n  // SimpleCalendarChart\n  // const data = useRecoilValue(getCalendarData) as { day: string, value: number }[]\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/*\n          <SimpleLineChart data={data} />\n          <SimpleBarGraph />\n          <SimplePie />\n          <SimpleCalendarChart data={data} />\n          <SimpleReactVizChart />\n        */}\n        <SimpleReactVizChart />\n      </header>\n    </div>\n  )\n}\n\nexport default App\n","// src/AppRouter.tsx\n\nimport React, { FunctionComponent, Suspense } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { RecoilRoot } from 'recoil'\nimport App from './App'\n\nconst AppRouter: FunctionComponent = () => {\n  return (\n    <Router>\n      <RecoilRoot>\n        <Suspense fallback={<span>Loading...</span>}>\n          <Switch>\n            <Route exact path=\"/\" component={App} />\n          </Switch>\n        </Suspense>\n      </RecoilRoot>\n    </Router>\n  )\n}\n\n/*\n    EE: To replace Recoil state management with Redux Toolkit;\n\n    import { Provider } from 'react-redux'\n    import store from './redux/store'\n\n    <Router>\n      <Provider store={store}>\n        <Switch>\n          <Route exact path=\"/\" component={App} />\n        </Switch>\n      </Provider>\n    </Router>\n */\n\nexport default AppRouter\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport AppRouter from './AppRouter'\n\n// You need bootstrap? $ yarn add bootstrap\n// See: https://create-react-app.dev/docs/adding-bootstrap\n// import 'bootstrap/dist/css/bootstrap.css';\n\n// Single-page application (SPA)\nReactDOM.render(<AppRouter />, document.getElementById('root'))\n\n// If you want to Pre-render with react-snap\n// Step 1: install $ yarn add --dev react-snap\n// Step 2: add to package.json run script: \"postbuild\": \"react-snap\"\n// Step 3: Add to package.json: \"reactSnap\":{\"inlineCss\":true}\n// Step 3: replace to the script below.\n\n/*\nimport { hydrate, render } from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\n\nconst rootElement = document.getElementById('root')\nif (rootElement && rootElement!.hasChildNodes()) {\n  hydrate(<AppRouter />, rootElement)\n\n  // Precache - set to 'register' once you Pre-render\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: http://bit.ly/CRA-PWA\n  serviceWorker.register()\n} else {\n  render(<AppRouter />, rootElement)\n}\n*/\n"],"sourceRoot":""}